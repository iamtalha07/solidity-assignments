{
	"id": "caf7d58f5433e7e3632bc6c1f71e8636",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Voting.sol": {
				"content": "pragma solidity >= 0.7.0 < 0.8.0;\n\ncontract Ballot {\n    //Variables\n\n    //Functions\n\n    //Modifiers\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Voting.sol": {
				"Ballot": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Voting.sol\":35:104  contract Ballot {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Voting.sol\":35:104  contract Ballot {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cd21457ee11741037373ce92bd5c3cb75df4cc37db9e450aa87f622fe4925c8764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220cd21457ee11741037373ce92bd5c3cb75df4cc37db9e450aa87f622fe4925c8764736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x21 GASLIMIT PUSH31 0xE11741037373CE92BD5C3CB75DF4CC37DB9E450AA87F622FE4925C8764736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "35:69:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220cd21457ee11741037373ce92bd5c3cb75df4cc37db9e450aa87f622fe4925c8764736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x21 GASLIMIT PUSH31 0xE11741037373CE92BD5C3CB75DF4CC37DB9E450AA87F622FE4925C8764736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "35:69:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 104,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 104,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd21457ee11741037373ce92bd5c3cb75df4cc37db9e450aa87f622fe4925c8764736f6c63430007060033",
									".code": [
										{
											"begin": 35,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 104,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Ballot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Voting.sol\":{\"keccak256\":\"0xa4c1ec8b2557eefeaa1df6e86c22c068d1223a08d55a069a8fab9ad1072a9f58\",\"urls\":[\"bzz-raw://8c1bdaa05da25242d71ee6a1bc1c846995f92c948c47db23bd55df8be938fb34\",\"dweb:/ipfs/QmZYkNV7D6kzjTBTfiRCPadxHyPhwKhdiexcPvbNtAgPje\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/Voting.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Voting.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Voting.sol": {
				"ast": {
					"absolutePath": "contracts/Voting.sol",
					"exportedSymbols": {
						"Ballot": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "35:69:0"
						}
					],
					"src": "0:105:0"
				},
				"id": 0
			}
		}
	}
}